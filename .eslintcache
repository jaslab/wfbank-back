[{"F:\\work_place\\bankfront\\front\\src\\index.js":"1","F:\\work_place\\bankfront\\front\\src\\App.js":"2","F:\\work_place\\bankfront\\front\\src\\components\\pages\\Login.js":"3","F:\\work_place\\bankfront\\front\\src\\components\\pages\\Logout.js":"4","F:\\work_place\\bankfront\\front\\src\\components\\data\\data.js":"5","F:\\work_place\\bankfront\\front\\src\\components\\utils\\Common.js":"6","F:\\work_place\\bankfront\\front\\src\\components\\headers\\AppbarLogin.js":"7","F:\\work_place\\bankfront\\front\\src\\components\\Footer\\index.js":"8","F:\\work_place\\bankfront\\front\\src\\components\\Footer\\AppFooter.js":"9","F:\\work_place\\bankfront\\front\\src\\components\\forms\\Loginform.js":"10","F:\\work_place\\bankfront\\front\\src\\components\\pages\\Dashboard.js":"11","F:\\work_place\\bankfront\\front\\src\\components\\sidebar\\MiniDrawer.js":"12","F:\\work_place\\bankfront\\front\\src\\components\\contents\\AccountCont.js":"13","F:\\work_place\\bankfront\\front\\src\\components\\contents\\TranCont.js":"14","F:\\work_place\\bankfront\\front\\src\\components\\contents\\Loancont.js":"15","F:\\work_place\\bankfront\\front\\src\\components\\contents\\LoanTranCont.js":"16","F:\\work_place\\bankfront\\front\\src\\components\\contents\\PasswordCont.js":"17","F:\\work_place\\bankfront\\front\\src\\components\\forms\\Loanform.js":"18","F:\\work_place\\bankfront\\front\\src\\components\\forms\\Accountform.js":"19","F:\\work_place\\bankfront\\front\\src\\components\\forms\\Transactionform.js":"20","F:\\work_place\\bankfront\\front\\src\\components\\forms\\LoanTransactionForm.js":"21","F:\\work_place\\bankfront\\front\\src\\components\\contents\\LoanDetails.js":"22","F:\\work_place\\bankfront\\front\\src\\components\\contents\\LoanPaymentDetails.js":"23","F:\\work_place\\bankfront\\front\\src\\components\\contents\\LoanPayPlan.js":"24","F:\\work_place\\bankfront\\front\\src\\components\\forms\\Memberfee.js":"25","F:\\work_place\\bankfront\\front\\src\\components\\forms\\Dipositform.js":"26","F:\\work_place\\bankfront\\front\\src\\components\\models\\Memberfeemodel.js":"27","F:\\work_place\\bankfront\\front\\src\\components\\models\\Depositmodel.js":"28","F:\\work_place\\bankfront\\front\\src\\components\\models\\Loanfrommodel.js":"29","F:\\work_place\\bankfront\\front\\src\\components\\forms\\LoanTranForm.js":"30","F:\\work_place\\bankfront\\front\\src\\components\\models\\Loanpaymentplanmodel.js":"31","F:\\work_place\\bankfront\\front\\src\\components\\models\\Loanpaidmodel.js":"32","F:\\work_place\\bankfront\\front\\src\\components\\contents\\Loanpaid.js":"33","F:\\work_place\\bankfront\\front\\src\\components\\contents\\BankCont.js":"34","F:\\work_place\\bankfront\\front\\src\\components\\forms\\Bankfrom.js":"35"},{"size":221,"mtime":1610214201151,"results":"36","hashOfConfig":"37"},{"size":565,"mtime":1610216448296,"results":"38","hashOfConfig":"37"},{"size":355,"mtime":1626437272167,"results":"39","hashOfConfig":"37"},{"size":841,"mtime":1610215047833,"results":"40","hashOfConfig":"37"},{"size":4379,"mtime":1638151167643,"results":"41","hashOfConfig":"37"},{"size":2693,"mtime":1613106137612,"results":"42","hashOfConfig":"37"},{"size":1338,"mtime":1610215569325,"results":"43","hashOfConfig":"37"},{"size":594,"mtime":1610215118167,"results":"44","hashOfConfig":"37"},{"size":908,"mtime":1610216152662,"results":"45","hashOfConfig":"37"},{"size":5584,"mtime":1636356905961,"results":"46","hashOfConfig":"37"},{"size":320,"mtime":1610266751559,"results":"47","hashOfConfig":"37"},{"size":8420,"mtime":1613968715887,"results":"48","hashOfConfig":"37"},{"size":1281,"mtime":1610372652512,"results":"49","hashOfConfig":"37"},{"size":216,"mtime":1610372844088,"results":"50","hashOfConfig":"37"},{"size":195,"mtime":1610361234292,"results":"51","hashOfConfig":"37"},{"size":242,"mtime":1613026380837,"results":"52","hashOfConfig":"37"},{"size":164,"mtime":1613968619343,"results":"53","hashOfConfig":"37"},{"size":9496,"mtime":1613967773551,"results":"54","hashOfConfig":"37"},{"size":7104,"mtime":1638151095662,"results":"55","hashOfConfig":"37"},{"size":4326,"mtime":1613062778603,"results":"56","hashOfConfig":"37"},{"size":5278,"mtime":1613130093573,"results":"57","hashOfConfig":"37"},{"size":5622,"mtime":1612769622069,"results":"58","hashOfConfig":"37"},{"size":2029,"mtime":1612521591023,"results":"59","hashOfConfig":"37"},{"size":4472,"mtime":1613123044032,"results":"60","hashOfConfig":"37"},{"size":8042,"mtime":1613967966799,"results":"61","hashOfConfig":"37"},{"size":6468,"mtime":1613967738621,"results":"62","hashOfConfig":"37"},{"size":2505,"mtime":1613057564824,"results":"63","hashOfConfig":"37"},{"size":2484,"mtime":1613062899136,"results":"64","hashOfConfig":"37"},{"size":2587,"mtime":1613122031630,"results":"65","hashOfConfig":"37"},{"size":5850,"mtime":1613967798092,"results":"66","hashOfConfig":"37"},{"size":2650,"mtime":1613123223810,"results":"67","hashOfConfig":"37"},{"size":2680,"mtime":1613129972586,"results":"68","hashOfConfig":"37"},{"size":4270,"mtime":1613131536349,"results":"69","hashOfConfig":"37"},{"size":201,"mtime":1613970068616,"results":"70","hashOfConfig":"37"},{"size":7818,"mtime":1634550769784,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"152istr",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"74"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"74"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"74"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"74"},"F:\\work_place\\bankfront\\front\\src\\index.js",[],["166","167"],"F:\\work_place\\bankfront\\front\\src\\App.js",[],"F:\\work_place\\bankfront\\front\\src\\components\\pages\\Login.js",[],"F:\\work_place\\bankfront\\front\\src\\components\\pages\\Logout.js",["168"],"import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { removeUserSession } from '../utils/Common';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { appbardata } from '../data/data';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    links: {\r\n        color: \"#fff\",\r\n    }\r\n}));\r\n\r\nfunction Logout() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    \r\n    function loadLogin() {\r\n        removeUserSession();\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button  className={classes.links} variant=\"\" color=\"#fff\" onClick={loadLogin}>\r\n                {appbardata.logout}\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Logout;\r\n","F:\\work_place\\bankfront\\front\\src\\components\\data\\data.js",["169","170","171","172","173"],"F:\\work_place\\bankfront\\front\\src\\components\\utils\\Common.js",[],"F:\\work_place\\bankfront\\front\\src\\components\\headers\\AppbarLogin.js",["174","175"],"import React from 'react'\r\nimport { appbardata } from '../data/data'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: '#4a148c',\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\nfunction AppbarLogin() {\r\n    const classes = useStyles();\r\n    return (\r\n            <div className={classes.root}>\r\n        <AppBar position=\"static\" className={classes.root}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n              <MailOutlineIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              {appbardata.sitename}\r\n            </Typography>\r\n           \r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AppbarLogin\r\n","F:\\work_place\\bankfront\\front\\src\\components\\Footer\\index.js",[],"F:\\work_place\\bankfront\\front\\src\\components\\Footer\\AppFooter.js",[],"F:\\work_place\\bankfront\\front\\src\\components\\forms\\Loginform.js",["176","177","178","179","180","181","182","183","184","185"],"import React, { useState } from 'react'\r\nimport '../css/loginform.css';\r\nimport { loginformdata, Apidata } from '../data/data'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { setUsers, setUserSession, getToken, setAccounts, setLoans } from '../utils/Common';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\"\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nfunction Loginform() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    let loginSchema = yup.object().shape({\r\n        username: yup.string().required(),\r\n        password: yup.string().required()\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: loginSchema\r\n    });\r\n\r\n    function initData(path,awt){\r\n        axios.get(path + 'v1/account/all',  { headers: { \"Authorization\": `Bearer ${awt}` }})\r\n        .then(response => {\r\n            const result = response.data;\r\n            setAccounts(JSON.stringify(result))\r\n            console.log(result);\r\n        })\r\n        .catch(err=>{\r\n        });\r\n        axios.get(path + 'v1/loan/all',  { headers: { \"Authorization\": `Bearer ${awt}` }})\r\n        .then(response => {\r\n            const result1 = response.data;\r\n            setLoans(JSON.stringify(result1));\r\n            console.log(result1);\r\n        })\r\n        .catch(err=>{\r\n        })\r\n    }\r\n   \r\n    \r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        // display form data on success\r\n        //setError(null);\r\n        //setLoading(true);\r\n        /**axios.post(apipath + 'api/auth/signin', { username: data.username, password: data.password }).then(response => {\r\n            setLoading(false);\r\n            setUserSession(response.data.jwt, response.data.username, response.data.id, response.data.nic, response.data.email, response.data.mobileno, response.data.district, response.data.fullName, response.data.roles);\r\n            initData(apipath,response.data.jwt);\r\n            history.push(\"/dashboard\");\r\n\r\n        }).catch(error => {\r\n            setLoading(false);\r\n            \r\n           // if (error.response.status === 401) setError(error.response.data.message);\r\n           // else setError(\"Something went wrong. Please try again later.\");\r\n        });\r\n        **/\r\n        history.push(\"/dashboard\");\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        {loginformdata.title}\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            inputRef={register}\r\n                            id=\"username\"\r\n                            label={loginformdata.username}\r\n                            name=\"username\"\r\n                            autoFocus\r\n                            error={errors.username ? true : false}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            inputRef={register}\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label={loginformdata.password}\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            error={errors.password ? true : false}\r\n                        />\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            {loginformdata.login}\r\n                        </Button>\r\n\r\n                    </form>\r\n                </div>\r\n\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loginform;\r\n","F:\\work_place\\bankfront\\front\\src\\components\\pages\\Dashboard.js",["186"],"import React from 'react'\r\nimport AppFooter from '../Footer/AppFooter'\r\nimport AppbarLogin from '../headers/AppbarLogin'\r\nimport MiniDrawer from '../sidebar/MiniDrawer'\r\n\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <>\r\n        <MiniDrawer/>\r\n        <AppFooter/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","F:\\work_place\\bankfront\\front\\src\\components\\sidebar\\MiniDrawer.js",["187","188"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { appbardata } from '../data/data';\r\nimport AccountCont from '../contents/AccountCont'\r\nimport Loancont from '../contents/Loancont'\r\nimport TranCont from '../contents/TranCont'\r\nimport LoanTranCont from '../contents/LoanTranCont'\r\nimport PasswordCont from '../contents/PasswordCont'\r\nimport BankCont from '../contents/BankCont'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [account, setAccount] = React.useState(false);\r\n  const [loan, setLoan] = React.useState(false);\r\n  const [transaction, setTransaction] = React.useState(false);\r\n  const [loantran, setLoantran] = React.useState(false);\r\n  const [report, setReport] = React.useState(false);\r\n  const [password, setPassword] = React.useState(false);\r\n  const [bank, setBank]=React.useState(false);\r\n\r\n\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const menuClick = (val) => {\r\n    switch (val) {\r\n      case 'ACC':\r\n        setAccount(true);\r\n        setLoan(false);\r\n        setTransaction(false);\r\n        setLoantran(false);\r\n        setReport(false);\r\n        setPassword(false);\r\n        setBank(false);\r\n        break;\r\n      case 'LON':\r\n        setAccount(false);\r\n        setLoan(true);\r\n        setTransaction(false);\r\n        setLoantran(false);\r\n        setReport(false);\r\n        setPassword(false);\r\n        setBank(false);\r\n        break;\r\n        case 'TRA':\r\n          setAccount(false);\r\n          setLoan(false);\r\n          setTransaction(true);\r\n          setLoantran(false);\r\n          setReport(false);\r\n          setPassword(false);\r\n          setBank(false);\r\n          break;\r\n          case 'LONTRA':\r\n          setAccount(false);\r\n          setLoan(false);\r\n          setTransaction(false);\r\n          setLoantran(true);\r\n          setReport(false);\r\n          setPassword(false);\r\n          setBank(false);\r\n          break;\r\n          case 'REP':\r\n          setAccount(false);\r\n          setLoan(false);\r\n          setTransaction(false);\r\n          setLoantran(false);\r\n          setReport(true);\r\n          setPassword(false);\r\n          setBank(false);\r\n          break;\r\n          case 'PAS':\r\n          setAccount(false);\r\n          setLoan(false);\r\n          setTransaction(false);\r\n          setLoantran(false);\r\n          setReport(false);\r\n          setPassword(true);\r\n          setBank(false);\r\n          break;\r\n          case 'BAN':\r\n          setAccount(false);\r\n          setLoan(false);\r\n          setTransaction(false);\r\n          setLoantran(false);\r\n          setReport(false);\r\n          setBank(true);\r\n          setPassword(false)\r\n          break;\r\n          \r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            {appbardata.sitename}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => menuClick('ACC')}>\r\n            <ListItemIcon><InboxIcon /></ListItemIcon>\r\n            <ListItemText primary='Account' />\r\n          </ListItem>\r\n          <ListItem button onClick={() => menuClick('LON')}>\r\n            <ListItemIcon><InboxIcon /></ListItemIcon>\r\n            <ListItemText primary='Loan' />\r\n          </ListItem>\r\n          <ListItem button onClick={() => menuClick('TRA')}>\r\n            <ListItemIcon><InboxIcon /></ListItemIcon>\r\n            <ListItemText primary='Transaction' />\r\n          </ListItem>\r\n          <ListItem button onClick={() => menuClick('LONTRA')}>\r\n            <ListItemIcon><InboxIcon /></ListItemIcon>\r\n            <ListItemText primary='Loan Transaction' />\r\n          </ListItem>\r\n          <ListItem button onClick={() => menuClick('BAN')}>\r\n            <ListItemIcon><InboxIcon /></ListItemIcon>\r\n            <ListItemText primary='Bank Transaction' />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['Reports', 'Password', 'Logout'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {account && <AccountCont/>}\r\n        {loan && <Loancont/>}\r\n        {transaction && <TranCont/>}\r\n        {loantran && <LoanTranCont/>}\r\n        {password && <PasswordCont/>}\r\n        {bank && <BankCont/>}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","F:\\work_place\\bankfront\\front\\src\\components\\contents\\AccountCont.js",["189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"import React, { useState } from 'react'\r\nimport { loginformdata, Apidata } from '../data/data'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { setUsers, setUserSession, getToken } from '../utils/Common';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accountform from '../forms/Accountform'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\"\r\n    },\r\n}));\r\n\r\nfunction AccountCont() {\r\n    const clases=makeStyles();\r\n    return (\r\n        <>\r\n        <Paper className={clases.paper}>\r\n            <Accountform/>\r\n        </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AccountCont\r\n","F:\\work_place\\bankfront\\front\\src\\components\\contents\\TranCont.js",[],"F:\\work_place\\bankfront\\front\\src\\components\\contents\\Loancont.js",[],"F:\\work_place\\bankfront\\front\\src\\components\\contents\\LoanTranCont.js",[],"F:\\work_place\\bankfront\\front\\src\\components\\contents\\PasswordCont.js",[],"F:\\work_place\\bankfront\\front\\src\\components\\forms\\Loanform.js",["206","207","208","209","210","211","212","213","214"],"import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Functions from '@material-ui/icons/Functions';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../utils/Common';\r\nimport LoanDetails from '../contents/LoanDetails';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\",\r\n        marginBottom: 10\r\n\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction Loanform() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [loanstate, setLoanstate] = useState(true);\r\n    const [loan, setLoan] = useState(null);\r\n    const date = new Date();\r\n    const formatedDate = `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()}`\r\n\r\n    let loanSchema = yup.object().shape({\r\n        //customer_id: yup.string(),\r\n        loan_type: yup.string(),\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: loanSchema\r\n    });\r\n\r\n    function calculateIntrest() {\r\n        alert(\"Calculate\");\r\n    }\r\n\r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        const userId = getId();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.post(apipath + 'v1/loan', {\r\n            loanAccount: data.customer_id,\r\n            loanDate: data.reg_date,\r\n            loan_Title: data.loan_type,\r\n            loanAmount: data.loan_amt,\r\n            rate: data.loan_interest,\r\n            periods: data.loan_period,\r\n            loanComment: data.loan_comment,\r\n        }, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then(response => {\r\n                setLoading(false);\r\n                document.getElementById(\"create-account\").reset();\r\n                NotificationManager.success('Success, Loan was created',);\r\n                setLoan(response.data);\r\n                setLoanstate(false);\r\n                //console.log(loan);\r\n            }).catch(error => {\r\n                setLoading(false);\r\n                NotificationManager.success('Error, Loan was not created',);\r\n                \r\n                //if (error.response.status === 401) setError(error.response.data.message);\r\n               // else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n    return (\r\n        <>\r\n            <NotificationContainer />\r\n            {loanstate &&\r\n                <Paper className={classes.paper} elevation={5}>\r\n\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {LetterFormdata.loan_title}\r\n                    </Typography>\r\n                    <form id=\"create-account\" className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} sm={3}>\r\n                                <TextField\r\n                                    id=\"reg_date\"\r\n                                    name=\"reg_date\"\r\n                                    inputRef={register}\r\n                                    label={LetterFormdata.reg_date}\r\n                                    type=\"date\"\r\n                                    defaultValue={formatedDate}\r\n                                    className={classes.textField}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={3}>\r\n                                <TextField\r\n                                    id=\"customer_id\"\r\n                                    name=\"customer_id\"\r\n                                    inputRef={register}\r\n                                    label={LetterFormdata.customer_id}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"customer_name\"\r\n                                    name=\"customer_name\"\r\n                                    inputRef={register}\r\n                                    label={LetterFormdata.customer_name}\r\n                                    fullWidth\r\n                                    autoComplete=\"given-name\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"loan_type\"\r\n                                    name=\"loan_type\"\r\n                                    inputRef={register}\r\n                                    label={LetterFormdata.loan_type}\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"loan_amt\"\r\n                                    name=\"loan_amt\"\r\n                                    inputRef={register}\r\n                                    label={LetterFormdata.loan_amt}\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"loan_interest\"\r\n                                    name=\"loan_interest\"\r\n                                    inputRef={register}\r\n                                    label={LetterFormdata.loan_interest}\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"loan_period\"\r\n                                    name=\"loan_period\"\r\n                                    inputRef={register}\r\n                                    label={LetterFormdata.loan_period}\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={12}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"loan_comment\"\r\n                                    name=\"loan_comment\"\r\n                                    inputRef={register}\r\n                                    label={LetterFormdata.loan_comment}\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid container justify=\"flex-end\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    type=\"submit\"\r\n                                >\r\n                                    {LetterFormdata.save}\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </form>\r\n\r\n                </Paper>\r\n            }\r\n\r\n            { !loanstate && <LoanDetails {...loan} />}\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Loanform\r\n","F:\\work_place\\bankfront\\front\\src\\components\\forms\\Accountform.js",["215","216","217","218","219","220","221","222"],"F:\\work_place\\bankfront\\front\\src\\components\\forms\\Transactionform.js",["223","224","225"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata} from '../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {getAccounts } from '../utils/Common';\r\nimport Memberfeemodel from '../models/Memberfeemodel';\r\nimport Depositmodel from '../models/Depositmodel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\",\r\n        marginBottom: \"10px\"\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction Transactionform() {\r\n    const custidfrom = useRef(null);\r\n    const classes = useStyles();\r\n    const [accounts, setAccounts] = useState(null);\r\n    const [cust, setCust] = useState('');\r\n    const date = new Date();\r\n\r\n    useEffect(() => {\r\n        const acc = getAccounts();\r\n        console.log(acc);\r\n        setAccounts(JSON.parse(acc));\r\n        return () => {\r\n        }\r\n    }, [])\r\n\r\n    function getUser() {\r\n        const form = custidfrom.current;\r\n        const id = form['customer_id'].value;\r\n        const b = accounts.find((item) => item.id == id);\r\n        if (b) {\r\n            setCust(b);\r\n            //alert(b.custName);\r\n            form['customer_name'].value = b.custName + ', ' + b.custJobTitle + ', ' + b.ecBranch;\r\n        } else {\r\n            alert(\"Pleae enter valied id\");\r\n            form['customer_name'].value = '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Paper style={{ marginBottom: 10, padding: 20 }} elevation={5}>\r\n\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    {LetterFormdata.tran_title}\r\n                </Typography>\r\n                <form ref={custidfrom} className={classes.form} >\r\n                    <Grid container >\r\n                        <Grid item xs={12} sm={2}>\r\n                            <TextField\r\n                                id=\"customer_id\"\r\n                                name=\"customer_id\"\r\n                                label={LetterFormdata.customer_id}\r\n                                fullWidth\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={2}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                style={{ marginTop: 5, marginLeft: 10, marginBottom: 20 }}\r\n                                size=\"large\"\r\n                                className={classes.button}\r\n                                startIcon={<SearchIcon />}\r\n                                type=\"button\"\r\n                                onClick={getUser}\r\n\r\n                            >\r\n                                {LetterFormdata.get}\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField\r\n                                style={{ marginBottom: 40, marginLeft: 10 }}\r\n                                id=\"customer_name\"\r\n                                name=\"customer_name\"\r\n                                fullWidth\r\n                                style={{ background: '#FFE082' }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                        <Memberfeemodel cust={cust}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                           \r\n                            <Depositmodel cust={cust}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Transactionform\r\n","F:\\work_place\\bankfront\\front\\src\\components\\forms\\LoanTransactionForm.js",["226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId, getLoans } from '../utils/Common';\r\nimport Loanfrommodel from '../models/Loanfrommodel';\r\nimport Loanpaymentplanmodel from '../models/Loanpaymentplanmodel';\r\nimport Loanpaidmodel from '../models/Loanpaidmodel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\",\r\n        marginBottom: \"10px\"\r\n\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction LoanTransactionForm() {\r\n    const loanform = useRef(null);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [loans, setLoans] = useState(null);\r\n    const [loan, setLoan] = useState('');\r\n    const date = new Date();\r\n    const formatedDate = `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()}`\r\n\r\n    let accSchema = yup.object().shape({\r\n        //customer_id: yup.string(),\r\n        loan_details: yup.string(),\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: accSchema\r\n    });\r\n\r\n    useEffect(() => {\r\n        const loans = getLoans();\r\n        console.log(loans);\r\n        setLoans(JSON.parse(loans));\r\n        return () => {\r\n        }\r\n    }, [])\r\n\r\n    function getUser() {\r\n        const form = loanform.current;\r\n        const id = form['loan_id'].value;\r\n        const b = loans.find((item) => item.id == id);\r\n        if (b) {\r\n            setLoan(b);\r\n            alert(b.id);\r\n            form['loan_details'].value ='Loan Id: '+ b.id + ', ' + 'Loan Amount: '+b.loanAmount + ', ' + 'Loan Periods: '+ b.periods;\r\n        } else {\r\n            alert(\"Pleae enter valied loan id\");\r\n            form['loan_details'].value = '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Paper style={{ marginBottom: 10, padding: 20 }} elevation={5}>\r\n\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    {LetterFormdata.tran_loan_title}\r\n                </Typography>\r\n                <form ref={loanform} className={classes.form} >\r\n                    <Grid container >\r\n                        <Grid item xs={12} sm={2}>\r\n                            <TextField\r\n                                id=\"loan_id\"\r\n                                name=\"loan_id\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.loan_id}\r\n                                fullWidth\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                style={{ marginTop: 5, marginLeft: 10, marginBottom: 20 }}\r\n                                size=\"large\"\r\n                                className={classes.button}\r\n                                startIcon={<SearchIcon />}\r\n                                type=\"button\"\r\n                                onClick={getUser}\r\n                            >\r\n                                {LetterFormdata.get_details}\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField\r\n                                style={{ marginBottom: 40, marginLeft: 10 }}\r\n                                id=\"loan_details\"\r\n                                name=\"loan_details\"\r\n                                inputRef={register}\r\n                                fullWidth\r\n                                style={{ background: '#FFE082' }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Loanpaymentplanmodel loanid={loan.id}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Loanpaidmodel loanid={loan.id} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Loanfrommodel />\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoanTransactionForm\r\n","F:\\work_place\\bankfront\\front\\src\\components\\contents\\LoanDetails.js",["242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261"],"import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Functions from '@material-ui/icons/Functions';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../utils/Common';\r\nimport Moment from 'moment';\r\nimport LoanPayPlan from './LoanPayPlan';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\",\r\n        marginBottom: 10\r\n\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nfunction LoanDetails(props) {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [loan, setLoan] = useState(null);\r\n    const date = new Date();\r\n    const formatedDate = `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()}`\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.paper} elevation={5}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    {LetterFormdata.loan_detail}\r\n                </Typography>\r\n                <Grid container>\r\n                    <Grid item xs={1}>\r\n                        <Typography>\r\n                            {LetterFormdata.loan_id}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <Typography>\r\n                            {props.id}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <Typography>\r\n                            {LetterFormdata.loan_date}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography>\r\n                            {Moment(props.loanDate).format('MMMM Do YYYY, h:mm:ss a')}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={2}>\r\n                        <Typography>\r\n                            {LetterFormdata.loan_type}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography>\r\n                            {props.loan_Title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography>\r\n                            {LetterFormdata.customer_name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography>\r\n                            {props.loanAccount.custName}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography>\r\n                            {LetterFormdata.Customer_job}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography>\r\n                            {props.loanAccount.custJobTitle}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography>\r\n                            {LetterFormdata.loan_amt}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <Typography>\r\n                            {props.loanAmount}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography>\r\n                            {LetterFormdata.loan_interest}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <Typography>\r\n                            {props.rate}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <Typography>\r\n                            {LetterFormdata.loan_period}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <Typography>\r\n                            {props.periods}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <Paper className={classes.paper} elevation={5}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    {LetterFormdata.pay_plan}\r\n                </Typography>\r\n                <LoanPayPlan loanId={props.id}/>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoanDetails\r\n","F:\\work_place\\bankfront\\front\\src\\components\\contents\\LoanPaymentDetails.js",["262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282"],"import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Functions from '@material-ui/icons/Functions';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../utils/Common';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\",\r\n        marginBottom: 10\r\n\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nfunction LoanPaymentDetails(props) {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [loan, setLoan] = useState(null);\r\n    const date = new Date();\r\n    const formatedDate = `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()}`\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.paper} elevation={5}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    {LetterFormdata.loan_pay_detail}\r\n                </Typography>              \r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoanPaymentDetails\r\n",["283","284"],"F:\\work_place\\bankfront\\front\\src\\components\\contents\\LoanPayPlan.js",["285","286","287","288","289","290","291","292"],"import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../utils/Common';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n\r\nfunction LoanPayPlan(props) {\r\n    const [loandetails, setLoandetails] = useState();\r\n    const classes = useStyles();\r\n\r\n    function loadApiData() {\r\n        //console.log(props);\r\n        alert(props.loanId);\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        // display form data on success\r\n        axios.get(apipath + 'v1/loan_details',\r\n            { headers: { \"Authorization\": `Bearer ${token}` }, params: { loanId: props.loanId } })\r\n            .then(response => {\r\n                const result = response.data;\r\n                alert(result);\r\n                console.log(result);\r\n                setLoandetails(result);\r\n                props.handleClose();\r\n                //console.log(postals)\r\n            }).catch(error => {\r\n                // if (error.response.status === 401) setError(error.response.data.message);\r\n                // else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadApiData();\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Month</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Principle</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Intrest</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Month Principle</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Month Intrest</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Month Installment</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n\r\n                        {loandetails && \r\n                        \r\n                        loandetails.map((ld) => (\r\n                            <StyledTableRow key={ld.id}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {ld.month}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{ld.loanAmount}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{ld.interestAmount}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{ld.loanMonthAmount}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{ld.interestMonthAmount}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{ld.monthAmt}</StyledTableCell>\r\n                            </StyledTableRow>\r\n\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoanPayPlan\r\n","F:\\work_place\\bankfront\\front\\src\\components\\forms\\Memberfee.js",["293","294","295","296","297","298","299"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId, getAccounts } from '../utils/Common';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\",\r\n        marginBottom: \"10px\"\r\n\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction Memberfee(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    let memberFeeSchema = yup.object().shape({\r\n        tran_year: yup.string(),\r\n        tran_month: yup.string(),\r\n        tran_amt1: yup.string(),\r\n        tran_amt2: yup.string(),\r\n        tran_amt3: yup.string(),\r\n        tran_total: yup.string()\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: memberFeeSchema\r\n    });\r\n\r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        const userId = getId();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.post(apipath + 'v1/member_fee', {\r\n            accId: props.cust.id,\r\n            year:data.tran_year,\r\n            month:data.tran_month,\r\n            amt1:data.tran_amt1,\r\n            amt2:data.tran_amt2,\r\n            amt3:data.tran_amt3,\r\n            total:data.tran_total,\r\n            enterUserId:userId,\r\n        }, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then(response => {\r\n                setLoading(false);\r\n                NotificationManager.success('Success, Member fee saved',);\r\n                console.log(response.data);\r\n            }).catch(error => {\r\n                setLoading(false);\r\n                NotificationManager.success('Error, Member not saved',);\r\n                \r\n               // if (error.response.status === 401) setError(error.response.data.message);\r\n               // else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <NotificationContainer/>\r\n            <Paper className={classes.paper} elevation={5}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            {LetterFormdata.member_fee} : {props.cust.id}{props.cust.custName}\r\n                        </Typography>\r\n                        <form id=\"create-account\" className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                            <Grid container spacing={1}>\r\n\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"tran_year\"\r\n                                        name=\"tran_year\"\r\n                                        inputRef={register}\r\n                                        label={LetterFormdata.year}\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-level2\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"tran_month\"\r\n                                        name=\"tran_month\"\r\n                                        inputRef={register}\r\n                                        label={LetterFormdata.month}\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-level2\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}></Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <TextField\r\n                                        \r\n                                        id=\"tran_amt1\"\r\n                                        name=\"tran_amt1\"\r\n                                        inputRef={register}\r\n                                        label={LetterFormdata.tran_amt}\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-level2\"\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <TextField\r\n                                        \r\n                                        id=\"tran_amt2\"\r\n                                        name=\"tran_amt2\"\r\n                                        inputRef={register}\r\n                                        label={LetterFormdata.tran_amt}\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-level2\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <TextField\r\n                                        \r\n                                        id=\"tran_amt3\"\r\n                                        name=\"tran_amt3\"\r\n                                        inputRef={register}\r\n                                        label={LetterFormdata.tran_amt}\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-level2\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"tran_total\"\r\n                                        name=\"tran_total\"\r\n                                        inputRef={register}\r\n                                        label={LetterFormdata.total}\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-level2\"\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid container justify=\"flex-end\">\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        {LetterFormdata.save}\r\n                                    </Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </form>\r\n\r\n                    </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Memberfee\r\n","F:\\work_place\\bankfront\\front\\src\\components\\forms\\Dipositform.js",["300","301","302","303","304","305","306","307","308","309"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId, getAccounts } from '../utils/Common';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\",\r\n        marginBottom: \"10px\"\r\n\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction Dipositform(props) {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    let accSchema = yup.object().shape({\r\n        tran_type: yup.string(),\r\n        tran_amt:yup.string(),\r\n        tran_comment:yup.string(),\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: accSchema\r\n    });\r\n\r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        const userId = getId();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.post(apipath + 'v1/acc_tran', {\r\n            accId: props.cust.id,\r\n            tranType:data.tran_type,\r\n            amount:data.tran_amt,\r\n            tranComment:data.tran_comment,\r\n            enterUserId:userId,\r\n        }, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then(response => {\r\n                setLoading(false);\r\n                NotificationManager.success('Success, Transaction saved',);\r\n                console.log(response.data);\r\n            }).catch(error => {\r\n                setLoading(false);\r\n                NotificationManager.success('Error, Transactionn not saved',);\r\n                \r\n               // if (error.response.status === 401) setError(error.response.data.message);\r\n               // else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n\r\n     }\r\n    return (\r\n        <>\r\n            <NotificationContainer/>\r\n            <Paper className={classes.paper} elevation={5}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    {LetterFormdata.diposit_withdrow}\r\n                </Typography>\r\n                <form  id=\"create-account\" className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl component=\"fieldset\">\r\n                                <RadioGroup row aria-label=\"tran_type\" defaultValue=\"DEBIT\" >\r\n                                    <FormControlLabel\r\n                                        name=\"tran_type\"\r\n                                        inputRef={register}\r\n                                        value=\"DEBIT\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        label={LetterFormdata.debit} />\r\n                                    <FormControlLabel\r\n                                        name=\"tran_type\"\r\n                                        inputRef={register}\r\n                                        value=\"CREDIT\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        label={LetterFormdata.credit} />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}></Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                required\r\n                                id=\"tran_amt\"\r\n                                name=\"tran_amt\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.tran_amt}\r\n                                fullWidth\r\n                                autoComplete=\"shipping address-level2\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={9}>\r\n                            <TextField\r\n                                required\r\n                                id=\"tran_comment\"\r\n                                name=\"tran_comment\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.comment}\r\n                                fullWidth\r\n                                autoComplete=\"shipping address-level2\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                type=\"submit\"\r\n                            >\r\n                                {LetterFormdata.save}\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dipositform\r\n","F:\\work_place\\bankfront\\front\\src\\components\\models\\Memberfeemodel.js",["310","311"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Memberfee from '../forms/Memberfee';\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 800,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nfunction Memberfeemodel(props) {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n\r\n    };\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <Memberfee cust={props.cust} onChange={handleClose}/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                                variant=\"contained\"\r\n                                style={{ marginTop: 20 }}\r\n                                color=\"primary\"\r\n                                style={{ marginTop: 30 }}\r\n                                size=\"large\"\r\n                                className={classes.button}\r\n                                startIcon={<AddIcon />}\r\n                                type=\"button\"\r\n                                onClick={handleOpen} \r\n                            >\r\n                                {LetterFormdata.member_fee}\r\n                            </Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                \r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Memberfeemodel\r\n","F:\\work_place\\bankfront\\front\\src\\components\\models\\Depositmodel.js",["312"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\nimport Dipositform from '../forms/Dipositform';\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 800,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nfunction Depositmodel(props) {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <Dipositform cust={props.cust} onChange={handleClose}/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n                                <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                style={{ marginTop: 30, marginLeft: 10 }}\r\n                                size=\"large\"\r\n                                className={classes.button}\r\n                                startIcon={<AddIcon />}\r\n                                type=\"button\"\r\n                                onClick={handleOpen}\r\n                            >\r\n                                {LetterFormdata.diposit_fee}\r\n                            </Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                \r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Depositmodel\r\n","F:\\work_place\\bankfront\\front\\src\\components\\models\\Loanfrommodel.js",["313","314","315","316"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport LoanTranForm from '../forms/LoanTranForm';\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 800,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nfunction Loanfrommodel(props) {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n\r\n    };\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <LoanTranForm accid={props.loanid} onChange={handleClose} onChange={handleClose}/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                                variant=\"contained\"\r\n                                style={{ marginTop: 20 }}\r\n                                color=\"primary\"\r\n                                style={{ marginTop: 30 }}\r\n                                size=\"large\"\r\n                                className={classes.button}\r\n                                startIcon={<AddIcon />}\r\n                                type=\"button\"\r\n                                onClick={handleOpen} \r\n                            >\r\n                                {LetterFormdata.loan_installmet}\r\n                            </Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                \r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loanfrommodel\r\n","F:\\work_place\\bankfront\\front\\src\\components\\forms\\LoanTranForm.js",["317","318","319","320","321","322","323","324","325","326","327","328","329","330","331"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId, getAccounts } from '../utils/Common';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\",\r\n        marginBottom: \"10px\"\r\n\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction LoanTranForm(props) {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    let accSchema = yup.object().shape({\r\n        tran_amt: yup.string(),\r\n        tran_month: yup.string(),\r\n        tran_comment: yup.string(),\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: accSchema\r\n    });\r\n\r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        const userId = getId();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.post(apipath + 'v1/loan_tran', {\r\n            loan: props.accid,\r\n            amount: data.tran_amt,\r\n            month: data.tran_month,\r\n            tranComment: data.tran_comment,\r\n        }, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then(response => {\r\n                setLoading(false);\r\n                NotificationManager.success('Success, Transaction saved',);\r\n                //console.log(response.data);\r\n                props.onChange();\r\n            }).catch(error => {\r\n                setLoading(false);\r\n                NotificationManager.success('Error, Transaction not saved',);\r\n                \r\n                //if (error.response.status === 401) setError(error.response.data.message);\r\n               // else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n    return (\r\n        <>\r\n            <NotificationContainer />\r\n            <Paper className={classes.paper} elevation={5}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    {LetterFormdata.loan_payment+' '+props.accid}\r\n                </Typography>\r\n                <form id=\"create-account\" className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <Grid container>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                required\r\n                                id=\"tran_month\"\r\n                                name=\"tran_month\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.month}\r\n                                fullWidth\r\n                            />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={1}></Grid>\r\n                            <Grid item xs={12} sm={3}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"tran_amt\"\r\n                                    name=\"tran_amt\"\r\n                                    inputRef={register}\r\n                                    label={LetterFormdata.tran_amt}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={9}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"tran_comment\"\r\n                                    name=\"tran_comment\"\r\n                                    inputRef={register}\r\n                                    label={LetterFormdata.comment}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid container justify=\"flex-end\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    type=\"submit\"\r\n                                >\r\n                                    {LetterFormdata.save}\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    \r\n                </form>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoanTranForm\r\n","F:\\work_place\\bankfront\\front\\src\\components\\models\\Loanpaymentplanmodel.js",["332","333","334","335","336"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport LoanTranForm from '../forms/LoanTranForm';\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\nimport LoanPayPlan from '../contents/LoanPayPlan'\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 800,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nfunction Loanpaymentplanmodel(props) {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n\r\n    };\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <LoanPayPlan loanId={props.loanid} onChange={handleClose} onChange={handleClose}/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                                variant=\"contained\"\r\n                                style={{ marginTop: 20 }}\r\n                                color=\"primary\"\r\n                                style={{ marginTop: 30 }}\r\n                                size=\"large\"\r\n                                className={classes.button}\r\n                                startIcon={<AddIcon />}\r\n                                type=\"button\"\r\n                                onClick={handleOpen} \r\n                            >\r\n                                {LetterFormdata.loan_pay_plan}\r\n                            </Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                \r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loanpaymentplanmodel\r\n","F:\\work_place\\bankfront\\front\\src\\components\\models\\Loanpaidmodel.js",["337","338","339","340","341","342"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport LoanTranForm from '../forms/LoanTranForm';\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\nimport LoanPayPlan from '../contents/LoanPayPlan'\r\nimport Loanpaid from '../contents/Loanpaid';\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 800,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nfunction Loanpaidmodel(props) {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n\r\n    };\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <Loanpaid loanId={props.loanid} onChange={handleClose} onChange={handleClose}/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                                variant=\"contained\"\r\n                                style={{ marginTop: 20 }}\r\n                                color=\"primary\"\r\n                                style={{ marginTop: 30 }}\r\n                                size=\"large\"\r\n                                className={classes.button}\r\n                                startIcon={<AddIcon />}\r\n                                type=\"button\"\r\n                                onClick={handleOpen} \r\n                            >\r\n                                {LetterFormdata.loan_paid_info}\r\n                            </Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                \r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loanpaidmodel\r\n","F:\\work_place\\bankfront\\front\\src\\components\\contents\\Loanpaid.js",["343","344","345","346","347","348","349","350","351","352"],"import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../utils/Common';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n\r\nfunction Loanpaid(props) {\r\n    const [loandetails, setLoandetails] = useState();\r\n    const classes = useStyles();\r\n    const [total, setTotal]=useState(0);\r\n\r\n    function loadApiData() {\r\n        //console.log(props);\r\n        alert(props.loanId);\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        // display form data on success\r\n        axios.get(apipath + 'v1/loan_tran',\r\n            { headers: { \"Authorization\": `Bearer ${token}` }, params: { loanId: props.loanId } })\r\n            .then(response => {\r\n                const result = response.data;\r\n                alert(result);\r\n                console.log(result);\r\n                setLoandetails(result);\r\n                props.handleClose();\r\n                //console.log(postals)\r\n            }).catch(error => {\r\n                // if (error.response.status === 401) setError(error.response.data.message);\r\n                // else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadApiData();\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Month</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">amount</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Comment</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n\r\n                        {loandetails && \r\n                        \r\n                        loandetails.map((ld) => (\r\n                            <StyledTableRow key={ld.id}>\r\n                                <StyledTableCell align=\"right\">{ld.month}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{ld.amount}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{ld.tranComment}</StyledTableCell>\r\n                            \r\n                            </StyledTableRow>\r\n                           \r\n                        ))\r\n                        \r\n                        }\r\n                        <StyledTableRow >\r\n                                <StyledTableCell align=\"right\"></StyledTableCell>\r\n                                <StyledTableCell align=\"right\"></StyledTableCell>\r\n                                <StyledTableCell align=\"right\"></StyledTableCell>\r\n                            </StyledTableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loanpaid\r\n","F:\\work_place\\bankfront\\front\\src\\components\\contents\\BankCont.js",[],"F:\\work_place\\bankfront\\front\\src\\components\\forms\\Bankfrom.js",["353","354","355","356","357","358"],"import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../utils/Common';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\"\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction Bankfrom() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const date = new Date();\r\n    const formatedDate = `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()}`\r\n\r\n    let accSchema = yup.object().shape({\r\n        //customer_id: yup.string(),\r\n        customer_name: yup.string(),\r\n        Customer_branch: yup.string(),\r\n        Customer_job: yup.string()\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: accSchema\r\n    });\r\n\r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        const userId = getId();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.post(apipath + 'v1/account', {\r\n            id: data.customer_id,\r\n            joinDate: data.reg_date,\r\n            ecBranch: data.Customer_branch,\r\n            custName: data.customer_name,\r\n            custJobTitle: data.Customer_job,\r\n            regFee: data.Customer_reg_fee\r\n        }, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then(response => {\r\n                setLoading(false);\r\n                //alert(\"Saved\");\r\n                NotificationManager.success('Success, Account created',);\r\n                document.getElementById(\"create-account\").reset();\r\n            }).catch(error => {\r\n                setLoading(false);\r\n                NotificationManager.success('Error, Account not created',);\r\n                //if (error.response.status === 401) setError(error.response.data.message);\r\n                //else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <NotificationContainer />\r\n            <Paper className={classes.paper} elevation={5}>\r\n\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    {LetterFormdata.bank_title}\r\n                </Typography>\r\n                <form id=\"create-account\" className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <Grid container spacing={3}>\r\n                       \r\n                        <Grid item xs={12} sm={12}>\r\n                        <FormControl component=\"fieldset\">\r\n                                <RadioGroup row aria-label=\"tran_type\" defaultValue=\"DEBIT\" >\r\n                                    <FormControlLabel\r\n                                        name=\"tran_type\"\r\n                                        inputRef={register}\r\n                                        value=\"DEBIT\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        label={LetterFormdata.debit} />\r\n                                    <FormControlLabel\r\n                                        name=\"tran_type\"\r\n                                        inputRef={register}\r\n                                        value=\"CREDIT\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        label={LetterFormdata.credit} />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={3}>\r\n                             <TextField\r\n                                id=\"reg_date\"\r\n                                name=\"reg_date\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.bank_date}\r\n                                type=\"date\"\r\n                                defaultValue={formatedDate}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                            \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                required\r\n                                id=\"Customer_job\"\r\n                                name=\"Customer_job\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.amt}\r\n                                fullWidth\r\n                                autoComplete=\"shipping address-level2\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                required\r\n                                id=\"Customer_branch\"\r\n                                name=\"Customer_branch\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.comment}\r\n                                fullWidth\r\n                                autoComplete=\"shipping address-level2\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                required\r\n                                id=\"Customer_job\"\r\n                                name=\"Customer_job\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.depositer_name}\r\n                                fullWidth\r\n                                autoComplete=\"shipping address-level2\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                type=\"submit\"\r\n                            >\r\n                                {LetterFormdata.save}\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </form>\r\n            </Paper>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Bankfrom\r\n",{"ruleId":"359","replacedBy":"360"},{"ruleId":"361","replacedBy":"362"},{"ruleId":"363","severity":1,"message":"364","line":2,"column":10,"nodeType":"365","messageId":"366","endLine":2,"endColumn":18},{"ruleId":"367","severity":1,"message":"368","line":62,"column":5,"nodeType":"369","messageId":"370","endLine":62,"endColumn":15},{"ruleId":"367","severity":1,"message":"371","line":71,"column":5,"nodeType":"369","messageId":"370","endLine":71,"endColumn":12},{"ruleId":"367","severity":1,"message":"372","line":125,"column":5,"nodeType":"369","messageId":"370","endLine":125,"endColumn":16},{"ruleId":"367","severity":1,"message":"373","line":131,"column":5,"nodeType":"369","messageId":"370","endLine":131,"endColumn":12},{"ruleId":"367","severity":1,"message":"374","line":134,"column":5,"nodeType":"369","messageId":"370","endLine":134,"endColumn":11},{"ruleId":"363","severity":1,"message":"375","line":7,"column":8,"nodeType":"365","messageId":"366","endLine":7,"endColumn":14},{"ruleId":"363","severity":1,"message":"376","line":9,"column":8,"nodeType":"365","messageId":"366","endLine":9,"endColumn":16},{"ruleId":"363","severity":1,"message":"377","line":5,"column":10,"nodeType":"365","messageId":"366","endLine":5,"endColumn":21},{"ruleId":"363","severity":1,"message":"378","line":8,"column":10,"nodeType":"365","messageId":"366","endLine":8,"endColumn":18},{"ruleId":"363","severity":1,"message":"379","line":8,"column":20,"nodeType":"365","messageId":"366","endLine":8,"endColumn":34},{"ruleId":"363","severity":1,"message":"380","line":8,"column":36,"nodeType":"365","messageId":"366","endLine":8,"endColumn":44},{"ruleId":"363","severity":1,"message":"381","line":45,"column":12,"nodeType":"365","messageId":"366","endLine":45,"endColumn":19},{"ruleId":"363","severity":1,"message":"382","line":45,"column":21,"nodeType":"365","messageId":"366","endLine":45,"endColumn":31},{"ruleId":"363","severity":1,"message":"383","line":46,"column":12,"nodeType":"365","messageId":"366","endLine":46,"endColumn":17},{"ruleId":"363","severity":1,"message":"384","line":46,"column":19,"nodeType":"365","messageId":"366","endLine":46,"endColumn":27},{"ruleId":"363","severity":1,"message":"385","line":57,"column":14,"nodeType":"365","messageId":"366","endLine":57,"endColumn":22},{"ruleId":"363","severity":1,"message":"386","line":78,"column":15,"nodeType":"365","messageId":"366","endLine":78,"endColumn":22},{"ruleId":"363","severity":1,"message":"387","line":3,"column":8,"nodeType":"365","messageId":"366","endLine":3,"endColumn":19},{"ruleId":"363","severity":1,"message":"388","line":100,"column":10,"nodeType":"365","messageId":"366","endLine":100,"endColumn":16},{"ruleId":"389","severity":1,"message":"390","line":115,"column":5,"nodeType":"391","messageId":"392","endLine":180,"endColumn":6},{"ruleId":"363","severity":1,"message":"393","line":1,"column":17,"nodeType":"365","messageId":"366","endLine":1,"endColumn":25},{"ruleId":"363","severity":1,"message":"394","line":2,"column":10,"nodeType":"365","messageId":"366","endLine":2,"endColumn":23},{"ruleId":"363","severity":1,"message":"395","line":2,"column":25,"nodeType":"365","messageId":"366","endLine":2,"endColumn":32},{"ruleId":"363","severity":1,"message":"396","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":17},{"ruleId":"363","severity":1,"message":"377","line":4,"column":10,"nodeType":"365","messageId":"366","endLine":4,"endColumn":21},{"ruleId":"363","severity":1,"message":"397","line":5,"column":13,"nodeType":"365","messageId":"366","endLine":5,"endColumn":16},{"ruleId":"363","severity":1,"message":"398","line":6,"column":8,"nodeType":"365","messageId":"366","endLine":6,"endColumn":13},{"ruleId":"363","severity":1,"message":"378","line":7,"column":10,"nodeType":"365","messageId":"366","endLine":7,"endColumn":18},{"ruleId":"363","severity":1,"message":"379","line":7,"column":20,"nodeType":"365","messageId":"366","endLine":7,"endColumn":34},{"ruleId":"363","severity":1,"message":"380","line":7,"column":36,"nodeType":"365","messageId":"366","endLine":7,"endColumn":44},{"ruleId":"363","severity":1,"message":"399","line":8,"column":10,"nodeType":"365","messageId":"366","endLine":8,"endColumn":20},{"ruleId":"363","severity":1,"message":"375","line":9,"column":8,"nodeType":"365","messageId":"366","endLine":9,"endColumn":14},{"ruleId":"363","severity":1,"message":"400","line":10,"column":8,"nodeType":"365","messageId":"366","endLine":10,"endColumn":19},{"ruleId":"363","severity":1,"message":"401","line":11,"column":8,"nodeType":"365","messageId":"366","endLine":11,"endColumn":17},{"ruleId":"363","severity":1,"message":"402","line":12,"column":8,"nodeType":"365","messageId":"366","endLine":12,"endColumn":18},{"ruleId":"363","severity":1,"message":"403","line":14,"column":8,"nodeType":"365","messageId":"366","endLine":14,"endColumn":17},{"ruleId":"363","severity":1,"message":"404","line":18,"column":7,"nodeType":"365","messageId":"366","endLine":18,"endColumn":16},{"ruleId":"363","severity":1,"message":"405","line":7,"column":8,"nodeType":"365","messageId":"366","endLine":7,"endColumn":24},{"ruleId":"363","severity":1,"message":"406","line":8,"column":8,"nodeType":"365","messageId":"366","endLine":8,"endColumn":16},{"ruleId":"363","severity":1,"message":"407","line":12,"column":8,"nodeType":"365","messageId":"366","endLine":12,"endColumn":17},{"ruleId":"363","severity":1,"message":"408","line":49,"column":11,"nodeType":"365","messageId":"366","endLine":49,"endColumn":18},{"ruleId":"363","severity":1,"message":"381","line":50,"column":12,"nodeType":"365","messageId":"366","endLine":50,"endColumn":19},{"ruleId":"363","severity":1,"message":"383","line":51,"column":12,"nodeType":"365","messageId":"366","endLine":51,"endColumn":17},{"ruleId":"363","severity":1,"message":"409","line":62,"column":37,"nodeType":"365","messageId":"366","endLine":62,"endColumn":43},{"ruleId":"363","severity":1,"message":"410","line":66,"column":14,"nodeType":"365","messageId":"366","endLine":66,"endColumn":30},{"ruleId":"363","severity":1,"message":"411","line":73,"column":15,"nodeType":"365","messageId":"366","endLine":73,"endColumn":21},{"ruleId":"363","severity":1,"message":"405","line":7,"column":8,"nodeType":"365","messageId":"366","endLine":7,"endColumn":24},{"ruleId":"363","severity":1,"message":"406","line":8,"column":8,"nodeType":"365","messageId":"366","endLine":8,"endColumn":16},{"ruleId":"363","severity":1,"message":"412","line":45,"column":10,"nodeType":"365","messageId":"366","endLine":45,"endColumn":23},{"ruleId":"363","severity":1,"message":"408","line":58,"column":11,"nodeType":"365","messageId":"366","endLine":58,"endColumn":18},{"ruleId":"363","severity":1,"message":"381","line":59,"column":12,"nodeType":"365","messageId":"366","endLine":59,"endColumn":19},{"ruleId":"363","severity":1,"message":"383","line":60,"column":12,"nodeType":"365","messageId":"366","endLine":60,"endColumn":17},{"ruleId":"363","severity":1,"message":"409","line":70,"column":37,"nodeType":"365","messageId":"366","endLine":70,"endColumn":43},{"ruleId":"363","severity":1,"message":"411","line":77,"column":15,"nodeType":"365","messageId":"366","endLine":77,"endColumn":21},{"ruleId":"363","severity":1,"message":"413","line":42,"column":11,"nodeType":"365","messageId":"366","endLine":42,"endColumn":15},{"ruleId":"414","severity":1,"message":"415","line":55,"column":51,"nodeType":"416","messageId":"370","endLine":55,"endColumn":53},{"ruleId":"417","severity":1,"message":"418","line":104,"column":33,"nodeType":"419","endLine":104,"endColumn":66},{"ruleId":"363","severity":1,"message":"395","line":3,"column":26,"nodeType":"365","messageId":"366","endLine":3,"endColumn":33},{"ruleId":"363","severity":1,"message":"398","line":12,"column":8,"nodeType":"365","messageId":"366","endLine":12,"endColumn":13},{"ruleId":"363","severity":1,"message":"380","line":14,"column":10,"nodeType":"365","messageId":"366","endLine":14,"endColumn":18},{"ruleId":"363","severity":1,"message":"420","line":14,"column":20,"nodeType":"365","messageId":"366","endLine":14,"endColumn":25},{"ruleId":"363","severity":1,"message":"408","line":46,"column":11,"nodeType":"365","messageId":"366","endLine":46,"endColumn":18},{"ruleId":"363","severity":1,"message":"381","line":47,"column":12,"nodeType":"365","messageId":"366","endLine":47,"endColumn":19},{"ruleId":"363","severity":1,"message":"382","line":47,"column":21,"nodeType":"365","messageId":"366","endLine":47,"endColumn":31},{"ruleId":"363","severity":1,"message":"383","line":48,"column":12,"nodeType":"365","messageId":"366","endLine":48,"endColumn":17},{"ruleId":"363","severity":1,"message":"384","line":48,"column":19,"nodeType":"365","messageId":"366","endLine":48,"endColumn":27},{"ruleId":"363","severity":1,"message":"421","line":52,"column":11,"nodeType":"365","messageId":"366","endLine":52,"endColumn":23},{"ruleId":"363","severity":1,"message":"422","line":59,"column":23,"nodeType":"365","messageId":"366","endLine":59,"endColumn":35},{"ruleId":"363","severity":1,"message":"409","line":59,"column":37,"nodeType":"365","messageId":"366","endLine":59,"endColumn":43},{"ruleId":"414","severity":1,"message":"415","line":74,"column":48,"nodeType":"416","messageId":"370","endLine":74,"endColumn":50},{"ruleId":"423","severity":1,"message":"424","line":78,"column":66,"nodeType":"416","messageId":"425","endLine":78,"endColumn":67},{"ruleId":"423","severity":1,"message":"424","line":78,"column":104,"nodeType":"416","messageId":"425","endLine":78,"endColumn":105},{"ruleId":"417","severity":1,"message":"418","line":124,"column":33,"nodeType":"419","endLine":124,"endColumn":66},{"ruleId":"363","severity":1,"message":"375","line":2,"column":8,"nodeType":"365","messageId":"366","endLine":2,"endColumn":14},{"ruleId":"363","severity":1,"message":"395","line":3,"column":26,"nodeType":"365","messageId":"366","endLine":3,"endColumn":33},{"ruleId":"363","severity":1,"message":"401","line":6,"column":8,"nodeType":"365","messageId":"366","endLine":6,"endColumn":17},{"ruleId":"363","severity":1,"message":"405","line":7,"column":8,"nodeType":"365","messageId":"366","endLine":7,"endColumn":24},{"ruleId":"363","severity":1,"message":"406","line":8,"column":8,"nodeType":"365","messageId":"366","endLine":8,"endColumn":16},{"ruleId":"363","severity":1,"message":"426","line":11,"column":8,"nodeType":"365","messageId":"366","endLine":11,"endColumn":16},{"ruleId":"363","severity":1,"message":"407","line":12,"column":8,"nodeType":"365","messageId":"366","endLine":12,"endColumn":17},{"ruleId":"363","severity":1,"message":"396","line":13,"column":10,"nodeType":"365","messageId":"366","endLine":13,"endColumn":17},{"ruleId":"363","severity":1,"message":"397","line":14,"column":13,"nodeType":"365","messageId":"366","endLine":14,"endColumn":16},{"ruleId":"363","severity":1,"message":"398","line":15,"column":8,"nodeType":"365","messageId":"366","endLine":15,"endColumn":13},{"ruleId":"363","severity":1,"message":"380","line":17,"column":10,"nodeType":"365","messageId":"366","endLine":17,"endColumn":18},{"ruleId":"363","severity":1,"message":"420","line":17,"column":20,"nodeType":"365","messageId":"366","endLine":17,"endColumn":25},{"ruleId":"363","severity":1,"message":"408","line":48,"column":11,"nodeType":"365","messageId":"366","endLine":48,"endColumn":18},{"ruleId":"363","severity":1,"message":"381","line":49,"column":12,"nodeType":"365","messageId":"366","endLine":49,"endColumn":19},{"ruleId":"363","severity":1,"message":"382","line":49,"column":21,"nodeType":"365","messageId":"366","endLine":49,"endColumn":31},{"ruleId":"363","severity":1,"message":"383","line":50,"column":12,"nodeType":"365","messageId":"366","endLine":50,"endColumn":17},{"ruleId":"363","severity":1,"message":"384","line":50,"column":19,"nodeType":"365","messageId":"366","endLine":50,"endColumn":27},{"ruleId":"363","severity":1,"message":"427","line":51,"column":12,"nodeType":"365","messageId":"366","endLine":51,"endColumn":16},{"ruleId":"363","severity":1,"message":"428","line":51,"column":18,"nodeType":"365","messageId":"366","endLine":51,"endColumn":25},{"ruleId":"363","severity":1,"message":"421","line":53,"column":11,"nodeType":"365","messageId":"366","endLine":53,"endColumn":23},{"ruleId":"363","severity":1,"message":"375","line":2,"column":8,"nodeType":"365","messageId":"366","endLine":2,"endColumn":14},{"ruleId":"363","severity":1,"message":"395","line":3,"column":26,"nodeType":"365","messageId":"366","endLine":3,"endColumn":33},{"ruleId":"363","severity":1,"message":"429","line":4,"column":8,"nodeType":"365","messageId":"366","endLine":4,"endColumn":12},{"ruleId":"363","severity":1,"message":"401","line":6,"column":8,"nodeType":"365","messageId":"366","endLine":6,"endColumn":17},{"ruleId":"363","severity":1,"message":"405","line":7,"column":8,"nodeType":"365","messageId":"366","endLine":7,"endColumn":24},{"ruleId":"363","severity":1,"message":"406","line":8,"column":8,"nodeType":"365","messageId":"366","endLine":8,"endColumn":16},{"ruleId":"363","severity":1,"message":"426","line":11,"column":8,"nodeType":"365","messageId":"366","endLine":11,"endColumn":16},{"ruleId":"363","severity":1,"message":"407","line":12,"column":8,"nodeType":"365","messageId":"366","endLine":12,"endColumn":17},{"ruleId":"363","severity":1,"message":"396","line":13,"column":10,"nodeType":"365","messageId":"366","endLine":13,"endColumn":17},{"ruleId":"363","severity":1,"message":"397","line":14,"column":13,"nodeType":"365","messageId":"366","endLine":14,"endColumn":16},{"ruleId":"363","severity":1,"message":"398","line":15,"column":8,"nodeType":"365","messageId":"366","endLine":15,"endColumn":13},{"ruleId":"363","severity":1,"message":"380","line":17,"column":10,"nodeType":"365","messageId":"366","endLine":17,"endColumn":18},{"ruleId":"363","severity":1,"message":"420","line":17,"column":20,"nodeType":"365","messageId":"366","endLine":17,"endColumn":25},{"ruleId":"363","severity":1,"message":"408","line":46,"column":11,"nodeType":"365","messageId":"366","endLine":46,"endColumn":18},{"ruleId":"363","severity":1,"message":"381","line":47,"column":12,"nodeType":"365","messageId":"366","endLine":47,"endColumn":19},{"ruleId":"363","severity":1,"message":"382","line":47,"column":21,"nodeType":"365","messageId":"366","endLine":47,"endColumn":31},{"ruleId":"363","severity":1,"message":"383","line":48,"column":12,"nodeType":"365","messageId":"366","endLine":48,"endColumn":17},{"ruleId":"363","severity":1,"message":"384","line":48,"column":19,"nodeType":"365","messageId":"366","endLine":48,"endColumn":27},{"ruleId":"363","severity":1,"message":"427","line":49,"column":12,"nodeType":"365","messageId":"366","endLine":49,"endColumn":16},{"ruleId":"363","severity":1,"message":"428","line":49,"column":18,"nodeType":"365","messageId":"366","endLine":49,"endColumn":25},{"ruleId":"363","severity":1,"message":"421","line":51,"column":11,"nodeType":"365","messageId":"366","endLine":51,"endColumn":23},{"ruleId":"359","replacedBy":"430"},{"ruleId":"361","replacedBy":"431"},{"ruleId":"363","severity":1,"message":"375","line":2,"column":8,"nodeType":"365","messageId":"366","endLine":2,"endColumn":14},{"ruleId":"363","severity":1,"message":"432","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":24},{"ruleId":"363","severity":1,"message":"429","line":4,"column":8,"nodeType":"365","messageId":"366","endLine":4,"endColumn":12},{"ruleId":"363","severity":1,"message":"402","line":5,"column":8,"nodeType":"365","messageId":"366","endLine":5,"endColumn":18},{"ruleId":"363","severity":1,"message":"399","line":15,"column":10,"nodeType":"365","messageId":"366","endLine":15,"endColumn":20},{"ruleId":"363","severity":1,"message":"420","line":16,"column":20,"nodeType":"365","messageId":"366","endLine":16,"endColumn":25},{"ruleId":"363","severity":1,"message":"433","line":36,"column":10,"nodeType":"365","messageId":"366","endLine":36,"endColumn":20},{"ruleId":"434","severity":1,"message":"435","line":76,"column":8,"nodeType":"436","endLine":76,"endColumn":10,"suggestions":"437"},{"ruleId":"363","severity":1,"message":"438","line":1,"column":27,"nodeType":"365","messageId":"366","endLine":1,"endColumn":36},{"ruleId":"363","severity":1,"message":"439","line":1,"column":38,"nodeType":"365","messageId":"366","endLine":1,"endColumn":44},{"ruleId":"363","severity":1,"message":"440","line":14,"column":27,"nodeType":"365","messageId":"366","endLine":14,"endColumn":38},{"ruleId":"363","severity":1,"message":"408","line":43,"column":11,"nodeType":"365","messageId":"366","endLine":43,"endColumn":18},{"ruleId":"363","severity":1,"message":"381","line":44,"column":12,"nodeType":"365","messageId":"366","endLine":44,"endColumn":19},{"ruleId":"363","severity":1,"message":"383","line":45,"column":12,"nodeType":"365","messageId":"366","endLine":45,"endColumn":17},{"ruleId":"363","severity":1,"message":"409","line":56,"column":37,"nodeType":"365","messageId":"366","endLine":56,"endColumn":43},{"ruleId":"363","severity":1,"message":"438","line":1,"column":27,"nodeType":"365","messageId":"366","endLine":1,"endColumn":36},{"ruleId":"363","severity":1,"message":"439","line":1,"column":38,"nodeType":"365","messageId":"366","endLine":1,"endColumn":44},{"ruleId":"363","severity":1,"message":"441","line":11,"column":8,"nodeType":"365","messageId":"366","endLine":11,"endColumn":15},{"ruleId":"363","severity":1,"message":"442","line":12,"column":8,"nodeType":"365","messageId":"366","endLine":12,"endColumn":18},{"ruleId":"363","severity":1,"message":"399","line":16,"column":10,"nodeType":"365","messageId":"366","endLine":16,"endColumn":20},{"ruleId":"363","severity":1,"message":"440","line":17,"column":27,"nodeType":"365","messageId":"366","endLine":17,"endColumn":38},{"ruleId":"363","severity":1,"message":"443","line":21,"column":8,"nodeType":"365","messageId":"366","endLine":21,"endColumn":17},{"ruleId":"363","severity":1,"message":"381","line":50,"column":12,"nodeType":"365","messageId":"366","endLine":50,"endColumn":19},{"ruleId":"363","severity":1,"message":"383","line":51,"column":12,"nodeType":"365","messageId":"366","endLine":51,"endColumn":17},{"ruleId":"363","severity":1,"message":"409","line":59,"column":37,"nodeType":"365","messageId":"366","endLine":59,"endColumn":43},{"ruleId":"363","severity":1,"message":"395","line":7,"column":26,"nodeType":"365","messageId":"366","endLine":7,"endColumn":33},{"ruleId":"417","severity":1,"message":"418","line":61,"column":33,"nodeType":"419","endLine":61,"endColumn":58},{"ruleId":"363","severity":1,"message":"395","line":6,"column":26,"nodeType":"365","messageId":"366","endLine":6,"endColumn":33},{"ruleId":"363","severity":1,"message":"444","line":4,"column":8,"nodeType":"365","messageId":"366","endLine":4,"endColumn":11},{"ruleId":"363","severity":1,"message":"395","line":8,"column":26,"nodeType":"365","messageId":"366","endLine":8,"endColumn":33},{"ruleId":"417","severity":1,"message":"418","line":53,"column":71,"nodeType":"419","endLine":53,"endColumn":93},{"ruleId":"417","severity":1,"message":"418","line":63,"column":33,"nodeType":"419","endLine":63,"endColumn":58},{"ruleId":"363","severity":1,"message":"438","line":1,"column":27,"nodeType":"365","messageId":"366","endLine":1,"endColumn":36},{"ruleId":"363","severity":1,"message":"439","line":1,"column":38,"nodeType":"365","messageId":"366","endLine":1,"endColumn":44},{"ruleId":"363","severity":1,"message":"405","line":7,"column":8,"nodeType":"365","messageId":"366","endLine":7,"endColumn":24},{"ruleId":"363","severity":1,"message":"441","line":11,"column":8,"nodeType":"365","messageId":"366","endLine":11,"endColumn":15},{"ruleId":"363","severity":1,"message":"442","line":12,"column":8,"nodeType":"365","messageId":"366","endLine":12,"endColumn":18},{"ruleId":"363","severity":1,"message":"399","line":16,"column":10,"nodeType":"365","messageId":"366","endLine":16,"endColumn":20},{"ruleId":"363","severity":1,"message":"440","line":17,"column":27,"nodeType":"365","messageId":"366","endLine":17,"endColumn":38},{"ruleId":"363","severity":1,"message":"445","line":18,"column":8,"nodeType":"365","messageId":"366","endLine":18,"endColumn":13},{"ruleId":"363","severity":1,"message":"446","line":19,"column":8,"nodeType":"365","messageId":"366","endLine":19,"endColumn":18},{"ruleId":"363","severity":1,"message":"447","line":20,"column":8,"nodeType":"365","messageId":"366","endLine":20,"endColumn":19},{"ruleId":"363","severity":1,"message":"443","line":21,"column":8,"nodeType":"365","messageId":"366","endLine":21,"endColumn":17},{"ruleId":"363","severity":1,"message":"381","line":50,"column":12,"nodeType":"365","messageId":"366","endLine":50,"endColumn":19},{"ruleId":"363","severity":1,"message":"383","line":51,"column":12,"nodeType":"365","messageId":"366","endLine":51,"endColumn":17},{"ruleId":"363","severity":1,"message":"409","line":59,"column":37,"nodeType":"365","messageId":"366","endLine":59,"endColumn":43},{"ruleId":"363","severity":1,"message":"411","line":66,"column":15,"nodeType":"365","messageId":"366","endLine":66,"endColumn":21},{"ruleId":"363","severity":1,"message":"444","line":4,"column":8,"nodeType":"365","messageId":"366","endLine":4,"endColumn":11},{"ruleId":"363","severity":1,"message":"448","line":6,"column":8,"nodeType":"365","messageId":"366","endLine":6,"endColumn":20},{"ruleId":"363","severity":1,"message":"395","line":8,"column":26,"nodeType":"365","messageId":"366","endLine":8,"endColumn":33},{"ruleId":"417","severity":1,"message":"418","line":54,"column":71,"nodeType":"419","endLine":54,"endColumn":93},{"ruleId":"417","severity":1,"message":"418","line":64,"column":33,"nodeType":"419","endLine":64,"endColumn":58},{"ruleId":"363","severity":1,"message":"444","line":4,"column":8,"nodeType":"365","messageId":"366","endLine":4,"endColumn":11},{"ruleId":"363","severity":1,"message":"448","line":6,"column":8,"nodeType":"365","messageId":"366","endLine":6,"endColumn":20},{"ruleId":"363","severity":1,"message":"395","line":8,"column":26,"nodeType":"365","messageId":"366","endLine":8,"endColumn":33},{"ruleId":"363","severity":1,"message":"449","line":9,"column":8,"nodeType":"365","messageId":"366","endLine":9,"endColumn":19},{"ruleId":"417","severity":1,"message":"418","line":55,"column":68,"nodeType":"419","endLine":55,"endColumn":90},{"ruleId":"417","severity":1,"message":"418","line":65,"column":33,"nodeType":"419","endLine":65,"endColumn":58},{"ruleId":"363","severity":1,"message":"375","line":2,"column":8,"nodeType":"365","messageId":"366","endLine":2,"endColumn":14},{"ruleId":"363","severity":1,"message":"432","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":24},{"ruleId":"363","severity":1,"message":"429","line":4,"column":8,"nodeType":"365","messageId":"366","endLine":4,"endColumn":12},{"ruleId":"363","severity":1,"message":"402","line":5,"column":8,"nodeType":"365","messageId":"366","endLine":5,"endColumn":18},{"ruleId":"363","severity":1,"message":"399","line":15,"column":10,"nodeType":"365","messageId":"366","endLine":15,"endColumn":20},{"ruleId":"363","severity":1,"message":"420","line":16,"column":20,"nodeType":"365","messageId":"366","endLine":16,"endColumn":25},{"ruleId":"363","severity":1,"message":"433","line":36,"column":10,"nodeType":"365","messageId":"366","endLine":36,"endColumn":20},{"ruleId":"363","severity":1,"message":"450","line":49,"column":12,"nodeType":"365","messageId":"366","endLine":49,"endColumn":17},{"ruleId":"363","severity":1,"message":"451","line":49,"column":19,"nodeType":"365","messageId":"366","endLine":49,"endColumn":27},{"ruleId":"434","severity":1,"message":"435","line":77,"column":8,"nodeType":"436","endLine":77,"endColumn":10,"suggestions":"452"},{"ruleId":"363","severity":1,"message":"406","line":8,"column":8,"nodeType":"365","messageId":"366","endLine":8,"endColumn":16},{"ruleId":"363","severity":1,"message":"408","line":46,"column":11,"nodeType":"365","messageId":"366","endLine":46,"endColumn":18},{"ruleId":"363","severity":1,"message":"381","line":47,"column":12,"nodeType":"365","messageId":"366","endLine":47,"endColumn":19},{"ruleId":"363","severity":1,"message":"383","line":48,"column":12,"nodeType":"365","messageId":"366","endLine":48,"endColumn":17},{"ruleId":"363","severity":1,"message":"409","line":59,"column":37,"nodeType":"365","messageId":"366","endLine":59,"endColumn":43},{"ruleId":"363","severity":1,"message":"411","line":66,"column":15,"nodeType":"365","messageId":"366","endLine":66,"endColumn":21},"no-native-reassign",["453"],"no-negated-in-lhs",["454"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'member_fee'.","ObjectExpression","unexpected","Duplicate key 'loan_id'.","Duplicate key 'upload_file'.","Duplicate key 'comment'.","Duplicate key 'secret'.","'Button' is defined but never used.","'MenuIcon' is defined but never used.","'yupResolver' is defined but never used.","'setUsers' is defined but never used.","'setUserSession' is defined but never used.","'getToken' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'initData' is defined but never used.","'apipath' is assigned a value but never used.","'AppbarLogin' is defined but never used.","'report' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'loginformdata' is defined but never used.","'Apidata' is defined but never used.","'useForm' is defined but never used.","'yup' is defined but never used.","'axios' is defined but never used.","'useHistory' is defined but never used.","'CssBaseline' is defined but never used.","'TextField' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'useStyles' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Functions' is defined but never used.","'history' is assigned a value but never used.","'errors' is assigned a value but never used.","'calculateIntrest' is defined but never used.","'userId' is assigned a value but never used.","'getModalStyle' is defined but never used.","'date' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'getId' is defined but never used.","'formatedDate' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'SaveIcon' is defined but never used.","'loan' is assigned a value but never used.","'setLoan' is assigned a value but never used.","'Grid' is defined but never used.",["453"],["454"],"'LetterFormdata' is defined but never used.","'createData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadApiData'. Either include it or remove the dependency array.","ArrayExpression",["455"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'getAccounts' is defined but never used.","'AddIcon' is defined but never used.","'SearchIcon' is defined but never used.","'FormLabel' is defined but never used.","'Fab' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControl' is defined but never used.","'LoanTranForm' is defined but never used.","'LoanPayPlan' is defined but never used.","'total' is assigned a value but never used.","'setTotal' is assigned a value but never used.",["456"],"no-global-assign","no-unsafe-negation",{"desc":"457","fix":"458"},{"desc":"457","fix":"459"},"Update the dependencies array to be: [loadApiData]",{"range":"460","text":"461"},{"range":"462","text":"461"},[2522,2524],"[loadApiData]",[2558,2560]]